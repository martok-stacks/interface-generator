<header module="OpenPGPIntf">
  <verbatim lang="fpc">
    {$mode objfpc}{$H+}
    {$calling stdcall}
  </verbatim>
  <declarations>
    <constants>
      <const name="OPENPGP_VERSION_NUM"><v type="hex">0000</v></const>
      <const name="OPENPGP_VERSION_STR"><v type="string">0.0-alpha</v></const>
    </constants>
    <types>
      <comment style="inline">Basic Types</comment>
      <comto>Lower 24bits contain big-endian Checksum, so =yxgk decodes to $002418CB</comto>
      <alias name="Radix64Checksum" type="UInt32"/>
      <alias name="OpenPGPResult" type="Int32"/>
      <alias name="OpenPGPVersion" type="UInt16"/>
    </types>
    <types>
      <comment style="inline">In-Message types</comment>
      <enum name="TOpenPGPPacketTag" size="1">
        <item name="ptReserved00">0</item>
        <item name="ptPKEncryptedSessionKey">1</item>
        <item name="ptSignature">2</item>
        <item name="ptSyEncryptedSessionKey">3</item>
        <item name="ptOnePassSignature">4</item>
        <item name="ptSecretKey">5</item>
        <item name="ptPublicKey">6</item>
        <item name="ptSecretSubkey">7</item>
        <item name="ptCompressedData">8</item>
        <item name="ptSyEncryptedData">9</item>
        <item name="ptMarker">10</item>
        <item name="ptLiteralData">11</item>
        <item name="ptTrust">12</item>
        <item name="ptUserID">13</item>
        <item name="ptPublicSubkey">14</item>
        <item name="ptUserAttrib">17</item>
        <item name="ptSyEncryptedIntegrData">18</item>
        <item name="ptModificationDetectionCode">19</item>
        <item name="ptPrivate60">60</item>
        <item name="ptPrivate61">61</item>
        <item name="ptPrivate62">62</item>
        <item name="ptPrivate63">63</item>
      </enum>

      <enum name="TOpenPGPPKAlgorithm" size="1">
        <item name="pkRSA">1</item>
        <item name="pkRSAEncryptOnly">2</item>
        <item name="pkRSASignOnly">3</item>
        <item name="pkElgamalEncryptOnly">16</item>
        <item name="pkDSA">17</item>
        <item name="pkReservedEC">18</item>
        <item name="pkReservedECDSA">19</item>
        <item name="pkReserved20">20</item>
        <item name="pkReservedDH">21</item>
        <item name="pkPrivate100">100</item>
        <item name="pkPrivate101">101</item>
        <item name="pkPrivate102">102</item>
        <item name="pkPrivate103">103</item>
        <item name="pkPrivate104">104</item>
        <item name="pkPrivate105">105</item>
        <item name="pkPrivate106">106</item>
        <item name="pkPrivate107">107</item>
        <item name="pkPrivate108">108</item>
        <item name="pkPrivate109">109</item>
        <item name="pkPrivate110">110</item>
      </enum>

      <enum name="TOpenPGPSymAlgorithm" size="1">
        <item name="skPlaintext">0</item>
        <item name="skIDEA">1</item>
        <item name="sk3DES_168">2</item>
        <item name="skCAST5_128">3</item>
        <item name="skBlowfish_128_16">4</item>
        <item name="skReserved05">5</item>
        <item name="skReserved06">6</item>
        <item name="skAES_128">7</item>
        <item name="skAES_192">8</item>
        <item name="skAES_256">9</item>
        <item name="skTwofish_256">10</item>
        <item name="skPrivate100">100</item>
        <item name="skPrivate101">101</item>
        <item name="skPrivate102">102</item>
        <item name="skPrivate103">103</item>
        <item name="skPrivate104">104</item>
        <item name="skPrivate105">105</item>
        <item name="skPrivate106">106</item>
        <item name="skPrivate107">107</item>
        <item name="skPrivate108">108</item>
        <item name="skPrivate109">109</item>
        <item name="skPrivate110">110</item>
      </enum>

      <enum name="TOpenPGPCompressionAlgorithm" size="1">
        <item name="caNone">0</item>
        <item name="caZip">1</item>
        <item name="caZlib">2</item>
        <item name="caBZip2">3</item>
        <item name="caPrivate100">100</item>
        <item name="caPrivate101">101</item>
        <item name="caPrivate102">102</item>
        <item name="caPrivate103">103</item>
        <item name="caPrivate104">104</item>
        <item name="caPrivate105">105</item>
        <item name="caPrivate106">106</item>
        <item name="caPrivate107">107</item>
        <item name="caPrivate108">108</item>
        <item name="caPrivate109">109</item>
        <item name="caPrivate110">110</item>
      </enum>

      <enum name="TOpenPGPHashAlgorithm" size="1">
        <item name="haMD5">1</item>
        <item name="haSHA1">2</item>
        <item name="haRIPEMD160">3</item>
        <item name="haReserved04">4</item>
        <item name="haReserved05">5</item>
        <item name="haReserved06">6</item>
        <item name="haReserved07">7</item>
        <item name="haSHA256">8</item>
        <item name="haSHA384">9</item>
        <item name="haSHA512">10</item>
        <item name="haSHA224">11</item>
        <item name="haPrivate100">100</item>
        <item name="haPrivate101">101</item>
        <item name="haPrivate102">102</item>
        <item name="haPrivate103">103</item>
        <item name="haPrivate104">104</item>
        <item name="haPrivate105">105</item>
        <item name="haPrivate106">106</item>
        <item name="haPrivate107">107</item>
        <item name="haPrivate108">108</item>
        <item name="haPrivate109">109</item>
        <item name="haPrivate110">110</item>
      </enum>

      <enum name="TOpenPGPSignatureType" size="1">
        <item name="stBinaryDocument"><v type="hex">00</v></item>
        <item name="stCanonicalDocument" />
        <item name="stStandalone" />

        <item name="stUserIDCertificationGeneric"><v type="hex">10</v></item>
        <item name="stUserIDCertificationPersona" />
        <item name="stUserIDCertificationCasual" />
        <item name="stUserIDCertificationPositive" />

        <item name="stSubkeyBinding"><v type="hex">18</v></item>
        <item name="stPrimaryKeyBinding" />

        <item name="stDirectKey"><v type="hex">1F</v></item>

        <item name="stKeyRevocation"><v type="hex">20</v></item>
        <item name="stSubKeyRevocation"><v type="hex">28</v></item>

        <item name="stCertificationRevocation"><v type="hex">30</v></item>

        <item name="stTimestamp"><v type="hex">40</v></item>

        <item name="stThirdPartyConfirmation"><v type="hex">50</v></item>
      </enum>

      <enum name="TOpenPGPSignatureSubpacketType" size="1">
        <item name="sstReserved00"><v type="hex">00</v></item>
        <item name="sstReserved01" />
        <item name="sstCreationTime" />
        <item name="sstExpirationTime" />
        <item name="sstExportableCertification" />
        <item name="sstTrustSignature" />
        <item name="sstRegularExpression" />
        <item name="sstRevocable" />
        <item name="sstReserved08" />
        <item name="sstKeyExpirationTime" />
        <item name="sstPlaceholder0A" />
        <item name="sstPreferredSymmetricAlgorithms" />
        <item name="sstRevocationKey" />
        <item name="sstReserved0D" />
        <item name="sstReserved0E" />
        <item name="sstReserved0F" />
        <item name="sstIssuer"><v type="hex">10</v></item>
        <item name="sstReserved11" />
        <item name="sstReserved12" />
        <item name="sstReserved13" />
        <item name="sstNotationData" />
        <item name="sstPreferredHashAlgorithms" />
        <item name="sstPreferredCompressionAlgorithms" />
        <item name="sstKeyServerPrefs" />
        <item name="sstPreferredKeyServer" />
        <item name="sstPrimaryUserID" />
        <item name="sstPolicyURI" />
        <item name="sstKeyFlags" />
        <item name="sstSignerUserID" />
        <item name="sstRevocationReason" />
        <item name="sstFeatures" />
        <item name="sstSignatureTarget" />
        <item name="sstEmbeddedSignature" />

        <item name="sstPrivate64"><v type="hex">64</v></item>
        <item name="sstPrivate65" />
        <item name="sstPrivate66" />
        <item name="sstPrivate67" />
        <item name="sstPrivate68" />
        <item name="sstPrivate69" />
        <item name="sstPrivate6A" />
        <item name="sstPrivate6B" />
        <item name="sstPrivate6C" />
        <item name="sstPrivate6D" />
        <item name="sstPrivate6E" />
      </enum>


      <enum name="TOpenPGPS2KAlgorithm" size="1">
        <item name="s2kSimple">0</item>
        <item name="s2kSalted">1</item>
        <item name="s2kReserved02">2</item>
        <item name="s2kIteratedSalted">3</item>
        <item name="s2kPrivate100">100</item>
        <item name="s2kPrivate101">101</item>
        <item name="s2kPrivate102">102</item>
        <item name="s2kPrivate103">103</item>
        <item name="s2kPrivate104">104</item>
        <item name="s2kPrivate105">105</item>
        <item name="s2kPrivate106">106</item>
        <item name="s2kPrivate107">107</item>
        <item name="s2kPrivate108">108</item>
        <item name="s2kPrivate109">109</item>
        <item name="s2kPrivate110">110</item>
      </enum>

      <enum name="TOpenPGPArmorHeaderType" size="1">
        <item name="ahOther" />
        <item name="ahPGP_MESSAGE" />
        <item name="ahPGP_PUBLIC_KEY" />
        <item name="ahPGP_PRIVATE_KEY" />
        <item name="ahPGP_MESSAGE_PARTXY" />
        <item name="ahPGP_MESSAGE_PARTX" />
        <item name="ahPGP_SIGNATURE" />
        <comto>used but defined otherwhere</comto>
        <item name="ahPGP_SIGNED_MESSAGE" />
      </enum>
    </types>
    <types>
      <comment style="inline">IO</comment>
      <interface name="IIOReadable" guid="{D6A24BCA-A4F2-4A6D-A4BF-6C401DFDD4D6}">
        <extends>IUnknown</extends>
        <method name="Read" return="Int64">
          <param name="Count" type="UInt64" attr="const"/>
          <param name="Buf" type="Pointer" attr="const"/>
        </method>
      </interface>
      <callback name="TMessageGetDataStream" return="OpenPGPResult">
        <param name="User" type="Pointer" attr="const"/>
        <param name="Message" type="IOpenPGPMessage" attr="const"/>
        <param name="Packet" type="IOpenPGPPacket" attr="const"/>
        <param name="Stream" type="IIOWritable" attr="out"/>
      </callback>
    </types>
    <types>
      <comment style="inline">Test</comment>
      <struct name="TSignatureVerifyRequest">
        <field name="Size" type="PtrInt"/>
        <field name="UserData" type="Pointer"/>
        <field name="OnLiteralDataStream" type="TMessageGetDataStream"/>
        <field name="OnPublicKeyNeeded" type="TMessagePublicKeyNeeded"/>
        <field name="OnDocumentHash" type="TMessageDocumentHash"/>
      </struct>
    </types>
  </declarations>
</header>
