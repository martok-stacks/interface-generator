<header module="OpenPGPIntf">
  <verbatim lang="fpc">
    {$mode objfpc}{$H+}
    {$calling stdcall}
  </verbatim>
  <declarations>
    <constants>
      <const name="OPENPGP_VERSION_NUM"><v type="hex">0000</v></const>
      <const name="OPENPGP_VERSION_STR"><v type="string">0.0-alpha</v></const>
    </constants>
    <types>
      <comment style="inline">Basic Types</comment>
      <comto>Lower 24bits contain big-endian Checksum, so =yxgk decodes to $002418CB</comto>
      <alias name="Radix64Checksum" type="UInt32"/>
      <alias name="OpenPGPResult" type="Int32"/>
      <alias name="OpenPGPVersion" type="UInt16"/>
    </types>
    <types>
      <include path="OpenPGPIntf2.xml" />
    </types>
    <types>
      <comment style="inline">IO</comment>
      <interface name="IIOReadable" guid="{D6A24BCA-A4F2-4A6D-A4BF-6C401DFDD4D6}">
        <extends>IUnknown</extends>
        <method name="Read" return="Int64">
          <param name="Count" type="UInt64" attr="const"/>
          <param name="Buf" type="Pointer" attr="const"/>
        </method>
      </interface>
      <callback name="TMessageGetDataStream" return="OpenPGPResult">
        <param name="User" type="Pointer" attr="const"/>
        <param name="Message" type="IOpenPGPMessage" attr="const"/>
        <param name="Packet" type="IOpenPGPPacket" attr="const"/>
        <param name="Stream" type="IIOWritable" attr="out"/>
      </callback>
    </types>
    <types>
      <comment style="inline">Test</comment>
      <struct name="TSignatureVerifyRequest">
        <field name="Size" type="PtrInt"/>
        <field name="UserData" type="Pointer"/>
        <field name="OnLiteralDataStream" type="TMessageGetDataStream"/>
        <field name="OnPublicKeyNeeded" type="TMessagePublicKeyNeeded"/>
        <field name="OnDocumentHash" type="TMessageDocumentHash"/>
      </struct>
    </types>
  </declarations>
</header>
